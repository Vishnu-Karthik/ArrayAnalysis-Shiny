if(!"rWikiPathways" %in% installed.packages()){
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("rWikiPathways", update = FALSE)
}
library(rWikiPathways)
load.libs <- c(
"DOSE",
"GO.db",
"GSEABase",
"org.Hs.eg.db",
"clusterProfiler",
"dplyr",
"tidyr",
"ggplot2",
"stringr",
"RColorBrewer",
"rWikiPathways",
"RCy3")
options(install.packages.check.source = "no")
options(install.packages.compile.from.source = "never")
if (!require("pacman")) install.packages("pacman"); library(pacman)
p_load(load.libs, update = TRUE, character.only = TRUE)
if(all(status)){
print("SUCCESS: You have successfully installed and loaded all required libraries.")
} else{
cat("ERROR: One or more libraries failed to install correctly. Check the following list for FALSE cases and try again...\n\n")
status
}
shiny::runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
shiny::runApp('projects/msc/sem4/shinyapp')
BiocManager::install("clusterProfiler")
lung.expr <- read.csv(system.file("extdata","data-lung-cancer.csv", package="rWikiPathways"),stringsAsFactors = FALSE)
nrow(lung.expr)
head(lung.expr)
up.genes <- lung.expr[lung.expr$log2FC > 1 & lung.expr$adj.P.Value < 0.05, 1]
dn.genes <- lung.expr[lung.expr$log2FC < -1 & lung.expr$adj.P.Value < 0.05, 1]
library(shiny); runApp('projects/msc/sem4/GO.R')
runApp('projects/msc/sem4/GO.R')
runApp('projects/msc/sem4/GO.R')
runApp('projects/msc/sem4/GO.R')
runApp('projects/msc/sem4/GO.R')
runApp('projects/msc/sem4/GO.R')
runApp('projects/msc/sem4/GO.R')
runApp('projects/msc/sem4/GO.R')
head(statData)
statData <- read.csv(system.file("extdata","data-lung-cancer.csv", package="rWikiPathways"),stringsAsFactors = FALSE)
head(statData)
up.genes.entrez <- clusterProfiler::bitr(up.genes,fromType = "ENSEMBL",toType = "ENTREZID",OrgDb = org.Hs.eg.db)
libary(org .Hs.eg.db)
libary(org.Hs.eg.db)
libary("org.Hs.eg.db")
BiocManager::install("org.Hs.eg.db")
up.genes.entrez <- clusterProfiler::bitr(up.genes,fromType = "ENSEMBL",toType = "ENTREZID",OrgDb = org.Hs.eg.db)
library(org.Hs.eg.db)
up.genes.entrez <- clusterProfiler::bitr(up.genes,fromType = "ENSEMBL",toType = "ENTREZID",OrgDb = org.Hs.eg.db)
dn.genes.entrez <- bitr(dn.genes,fromType = "ENSEMBL",toType = "ENTREZID",OrgDb = org.Hs.eg.db)
egobp <- clusterProfiler::enrichGO(
gene     = up.genes.entrez[[2]],
universe = bkgd.genes.entrez[[2]],
OrgDb    = org.Hs.eg.db,
ont      = "BP",
pAdjustMethod = "fdr",
pvalueCutoff = 0.05, #p.adjust cutoff (https://github.com/GuangchuangYu/clusterProfiler/issues/104)
readable = TRUE)
dn.genes.entrez <- bitr(dn.genes,fromType = "ENSEMBL",toType = "ENTREZID",OrgDb = org.Hs.eg.db)
bkgd.genes.entrez <- bitr(bkgd.genes,fromType = "ENSEMBL",toType = "ENTREZID",OrgDb = org.Hs.eg.db)
bkgd.genes <- statData[,1]
dn.genes.entrez <- bitr(dn.genes,fromType = "ENSEMBL",toType = "ENTREZID",OrgDb = org.Hs.eg.db)
bkgd.genes.entrez <- bitr(bkgd.genes,fromType = "ENSEMBL",toType = "ENTREZID",OrgDb = org.Hs.eg.db)
egobp <- clusterProfiler::enrichGO(
gene     = up.genes.entrez[[2]],
universe = bkgd.genes.entrez[[2]],
OrgDb    = org.Hs.eg.db,
ont      = "BP",
pAdjustMethod = "fdr",
pvalueCutoff = 0.05, #p.adjust cutoff (https://github.com/GuangchuangYu/clusterProfiler/issues/104)
readable = TRUE)
head(egobp,10)
runApp('projects/msc/sem4/shinyapp')
barplot(egobp, showCategory = 20)
dotplot(egobp, showCategory = 20)
emapplot(egobp, showCategory = 20)
install.packages(c("DT", "SPARQL"))
shiny::runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
runApp('abhi_app.R')
prefix <- "prefix rr: <http://www.w3.org/ns/r2rml#>
prefix ex: <http://example.com/ns#>
prefix map: <http://mapping.local/>
prefix sty: <http://purl.bioontology.org/ontology/STY/>
prefix sio: <http://semanticscience.org/resource/SIO_>
prefix foaf: <http://xmlns.com/foaf/0.1/>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>
prefix ncit: <http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#>
prefix roo: <http://www.cancerdata.org/roo/>
prefix icd: <http://purl.bioontology.org/ontology/ICD10/>
prefix skos: <http://www.w3.org/2008/05/skos#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix uo: <http://purl.obolibrary.org/obo/UO_>
prefix time: <http://www.w3.org/2006/time#>
prefix MEDDRA: <http://purl.bioontology.org/ontology/MEDDRA/>
prefix ro: <http://www.radiomics.org/RO/>"
query <- "SELECT  ?patientID   ?value ?age_at_diagnosis ?Death ?Overall_survival_days ?CT_Scan ?TstageValue ?NstageValue ?MstageValue
WHERE {
?patient a ncit:C16960.
?patient roo:P100042 ?patientID.
?patient roo:P100018 ?biologicalSex.
?biologicalSex roo:P100042 ?value.
?patient roo:P100016 ?ageatdiagnosis.
?ageatdiagnosis roo:P100042 ?age_at_diagnosis.
?patient roo:P100254 ?death.
?death roo:P100042 ?Death.
?patient roo:P100311 ?overallsurvivaldays.
?overallsurvivaldays roo:P100042 ?Overall_survival_days.
?patient roo:P100024 ?ctscan.
?ctscan roo:P100042   ?CT_Scan.
?patient roo:P100029 ?neoplasm.
?neoplasm roo:P100244 ?Tstage.
?Tstage roo:P100042 ?TstageValue.
?neoplasm roo:P100242 ?Nstage.
?Nstage roo:P100042 ?NstageValue.
?neoplasm roo:P100241 ?Mstage.
?Mstage roo:P100042 ?MstageValue.
}"
query <- paste(prefix,query)
print(query)
runApp('projects/msc/sem4/shinyapp')
runApp('abhi_app.R')
runApp('abhi_app.R')
SELECT <- "?input$patientID ?value ?age_at_diagnosis ?Death ?Overall_survival_days ?CT_Scan ?TstageValue ?NstageValue ?MstageValue
WHERE {
?patient a ncit:C16960.
?patient roo:P100042 ?patientID.
?patient roo:P100018 ?biologicalSex.
?biologicalSex roo:P100042 ?value.
?patient roo:P100016 ?ageatdiagnosis.
?ageatdiagnosis roo:P100042 ?age_at_diagnosis.
?patient roo:P100254 ?death.
?death roo:P100042 ?Death.
?patient roo:P100311 ?overallsurvivaldays.
?overallsurvivaldays roo:P100042 ?Overall_survival_days.
?patient roo:P100024 ?ctscan.
?ctscan roo:P100042   ?CT_Scan.
?patient roo:P100029 ?neoplasm.
?neoplasm roo:P100244 ?Tstage.
?Tstage roo:P100042 ?TstageValue.
?neoplasm roo:P100242 ?Nstage.
?Nstage roo:P100042 ?NstageValue.
?neoplasm roo:P100241 ?Mstage.
?Mstage roo:P100042 ?MstageValue.
}"
print(SELECT)
runApp('abhi_app.R')
runApp('abhi2.R')
runApp('abhi2.R')
runApp('abhi2.R')
runApp('abhi2.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
query <- query()
endpoint <- "http://sparql.cancerdata.org/namespace/Abhinandan_workspace/sparql"
output <- SPARQL(endpoint, query)
outputList <- output$results
outputList
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('abhi_app.R')
runApp('projects/msc/sem4/shinyapp')
library(limma)
shiny::runApp('projects/msc/sem4/shinyapp')
a <- matrix(1:9, nrow = 3)
a
a[,1:(length(a)-1)]
ncol(a)
a[,ncol(a)-1)]
a[,ncol(a)-1]
a[,1:ncol(a)-1]
a
a[,1:(ncol(a)-1))]
a[,1:(ncol(a)-1)]
a[,1:ncol(a)-1]
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
a <- "a"
a
nonquote(a)
a <- "1"
a
as.numeric(a)
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
m <- matrix(1:9, nrow = 3)
m
m <- matrix(cbind(c("1","1","1"),c("1","1","1"),c("1","1","1")), nrow = 3)
m
as.matrix(as.numeric(m))
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
m <- matrix(cbind(c("1","2","3"),c("1","2","3"),c("1","2","3")), ncol = 3)
m
storage.mode(m) <- "numeric"
m
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
?topTable
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
lung.expr <- read.csv(system.file("extdata","data-lung-cancer.csv", package="rWikiPathways"),stringsAsFactors = FALSE)
nrow(lung.expr)
head(lung.expr)
a <- data.frame(1:9,)
a <- matrix(1:9, nrow = 3)
a
a[,1] <- cbind(c(1,2,3))
a
a[,1] <- cbind(c("a",2,3))
a
a$4 <- cbind(c("a",2,3))
a$"4" <- cbind(c("a",2,3))
a[4] <- cbind(c("a",2,3))
a["a"] <- cbind(c("a",2,3))
data <- data.frame(x1 = 1:5,             # Create example data
x2 = letters[1:5])
data
vec <- c(1:5)
data$x3 <- vec
data
m
data$x4 <- m
m <- matrix(1:25, nrow = 5)
data$x4 <- m
data
data + m
df.insert  ()
data.insert(1, "NEW", m)
data
m
cbind(m,data)
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
m
rownames(m) <- c("a","b","c","d","a")
m
as.matrix(col) <- rownames(m)
f <- rownames(m)
f
f <- as.matrix(rownames(m))
f
cbind(f,m)
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
shiny::runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
shiny::runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
runApp('projects/msc/sem4/shinyapp')
BiocManager::install("BridgeDbR")
install.packages("rJava")
setwd("~/projects/msc/sem4/shinyapp/")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
